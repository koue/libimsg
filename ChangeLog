2023-12-13 00:37  jsg

	* lib/libutil/imsg_init.3: filedescriptor -> file descriptor

2023-12-12 15:49  claudio

	* lib/libutil/imsg_init.3: Move ibuf API from imsg_init.3 to
	  ibuf_add.3

	  Document all new functions added and adjust examples in
	  imsg_init.3 to follow the new way of handling messages.  OK tb@

2023-12-12 15:47  claudio

	* lib/libutil/: imsg-buffer.c, imsg.c, imsg.h: Extend imsg and ibuf
	  API with useful getter methods

	  For ibufs: - various getters for ibufs (ibuf_get* and ibuf_skip)
	  - additional ibuf set/add functions that don't alter byte order -
	  ibuf_truncate and ibuf_rewind - ibuf_from_buffer and
	  ibuf_from_ibuf to populate a reader ibuf - a getter for the
	  msgbuf queuelen

	  For imsg: - various getters for imsg (especially imsg_get_data()
	  which can be used   in most cases as a simple one call api with
	  all error checks).	All the imsg.hdr fields can also be
	  accessed by getters.	- The imsg data is now actually an ibuf but
	  the old imsg.data pointer is	 kept for now to not break every
	  imsg application.  - Introduce imsg_forward to simply forward a
	  message from one channel to	an other (used in the control
	  socket code).

	  Since this requires a major bump take the oportunity to also
	  cleanup some function signatures to use size_t for length fields.
	  Also internal data structures are removed from the public header.

	  With and OK tb@

2023-11-18 07:14  claudio

	* lib/libutil/imsg.c: Rename internal function imsg_get_fd() to
	  imsg_dequeue_fd().  OK tb@

2023-11-17 15:35  claudio

	* lib/libutil/imsg.c: The term peerid originated from bgpd. It is
	  time to generalize this and just call it id. This only targets
	  the function arguments but not the struct imsg_hdr field since
	  that is a major API break.  OK tb@

2023-11-17 13:43  claudio

	* lib/libutil/imsg.c: rename struct imsgbuf *ibuf to *imsgbuf since
	  ibuf is too close to struct ibuf and just causes confusion for
	  little gain.

	  OK tb@ stsp@

2023-10-24 14:05  claudio

	* lib/libutil/imsg-buffer.c: Require callers to use ibuf_fd_get()
	  to extract the passed fd from an ibuf.

	  In imsg_free() close any fd that was not claimed automatically to
	  prevent filedescriptor leaks. In ibuf_dequeue() remvoe code which
	  is now part of imsg_free().  OK tb@

2023-09-28 17:00  schwarze

	* lib/libutil/imsg_init.3: add a missing .Fa macro

2023-09-28 16:41  schwarze

	* lib/libutil/imsg_init.3: fix two wrong function names in the
	  description; from <Lucas at sexy dot is>

2023-06-20 06:53  jsg

	* lib/libutil/imsg_init.3: responsibilty -> responsibility

2023-06-20 05:56  jmc

	* lib/libutil/imsg_init.3: - filedescriptor -> file descriptor, as
	  per the rest of the page - missing full stop

2023-06-19 17:19  claudio

	* lib/libutil/: imsg-buffer.c, imsg.c, imsg.h, imsg_init.3: Improve
	  the ibuf API by adding these functions: Functions extending
	  ibuf_add to work with more specific data types   ibuf_add_buf,
	  ibuf_add_zero, ibuf_add_n8, ibuf_add_n16, ibuf_add_n32,
	  ibuf_add_n64 Functions replacing ibuf_seek where data at a
	  specific offset is modified	ibuf_set, ibuf_set_n8,
	  ibuf_set_n16, ibuf_set_n32, ibuf_set_n64 Functions to check, get
	  and set the filedescriptor stored on the ibuf   ibuf_fd_avail,
	  ibuf_fd_get, ibuf_fd_set and ibuf_data() to access the data
	  buffer, to be used together with ibuf_size()

	  On top of this add an optimized imsg_compose_ibuf() where an ibuf
	  is wrapped into an imsg in an efficent way.

	  Finally remove msgbuf_drain since it is not used by anything
	  outside of the ibuf code. Because of this removal bump the major
	  of libutil.

	  Remove ibuf_data() in iked since the same function is now
	  provided by libutil.	OK tb@

2023-05-23 12:41  claudio

	* lib/libutil/imsg-buffer.c: Avoid calling malloc with a zero
	  length argument.

	  ibuf_open() will return an error in this case while
	  ibuf_dynamic() accepts a 0 len argument and just initialized the
	  buffer and length to zero.  A later ibuf_realloc() call will take
	  care of allocating the buffer.

	  Additionally switch from malloc() to calloc() when allocating the
	  buffer this way the buffer is initalized and in ibuf_reserve() an
	  addtional memset() is used to make sure that the reserved data is
	  zeroed.

	  OK tb@

2023-03-08 04:43  guenther

	* lib/libutil/imsg.c: Delete obsolete /* ARGSUSED */ lint comments.

	  ok miod@ millert@

2022-05-19 08:05  stsp

	* lib/libutil/imsg_init.3: Document that imsg_add(3) frees its msg
	  argument on failure.

	  ok op@ claudio@

2022-04-23 08:57  tobias

	* lib/libutil/imsg-buffer.c: Verify sizes before arithmetic
	  operations

	  Unsigned overflows are not a bug in C but we have to make sure
	  that requested buffer sizes will be actually available.

	  If not, set errno to ERANGE and return an error value.

	  ok deraadt, millert

2022-01-28 10:41  claudio

	* lib/libutil/imsg.c: Only memcpy() into imsg->data if datalen is
	  not 0. Passing a NULL pointer to memcpy() is UB no matter if len
	  is 0.  Reported by fouzhe on openbgpd-portable github page.  OK
	  tb@

2021-03-31 17:42  eric

	* lib/libutil/imsg-buffer.c: change the barrier so that fd's are
	  always passed and received with the first byte of the imsg they
	  belong to.

	  idea, tweaks and ok claudio@

2021-03-18 11:16  claudio

	* lib/libc/stdlib/recallocarray.c: Type-cast getpagesize() from int
	  to size_t for the comparison with d.	getpagesize() will only
	  return positive numbers (there is no negative page size system)
	  and it can not fail.	Should fix some compiler warnings seen in
	  -portable projects.  OK otto@

2021-01-13 09:56  claudio

	* lib/libutil/imsg.h: Make imsg.h a bit more self-contained by
	  prototyping struct iovec.  OK martijn@ mvs@ deraadt@

2020-12-15 13:40  jmc

	* lib/libutil/imsg_init.3: typo fix from aisha tammy; ok nicm

2019-01-20 02:50  bcook

	* lib/libutil/: imsg-buffer.c, imsg.h, imsg_init.3: Change imsg
	  header definitions to use standard types.

	  ok deraadt@ claudio@

2018-09-26 09:22  jmc

	* lib/libutil/imsg_init.3: explicitly mention local processes; from
	  geoff hill ok nicm

2018-02-16 07:42  nicm

	* lib/libutil/imsg_init.3: Fix function argument names, from Abel
	  Abraham Camarillo Ojeda via jmc@.

2017-12-14 09:27  kettenis

	* lib/libutil/: imsg-buffer.c, imsg.c: Make a few internal symbols
	  static and add a Symbols.map version script to control which
	  symbols are exported from the shared library.

	  ok guenther@, deraadt@, jca@

2017-12-06 12:07  zhuk

	* lib/libutil/imsg_init.3: It's the imsg_compose(3) who accepts
	  'fd' argument, not imsg_create(3).

2017-05-03 15:49  reyk

	* lib/libutil/imsg_init.3: spacing (in EXAMPLES code)

2017-04-11 09:57  reyk

	* lib/libutil/: imsg-buffer.c, imsg.c: Use freezero(3) for the imsg
	  framework in imsg_free(3) and ibuf_free(3).

	  In our privsep model, imsg is often used to transport sensitive
	  information between processes.  But a process might free an imsg,
	  and reuse the memory for a different thing.  iked uses some
	  explicit_bzero() to clean imsg-buffer but doing it in the library
	  with the freezero() is less error-prone and also benefits other
	  daemons.

	  OK deraadt@ jsing@ claudio@

2017-03-24 09:34  nicm

	* lib/libutil/: imsg.c, imsg.h, imsg_init.3: Use C99 types
	  (uint32_t) instead of BSD (u_int32_t) - the former are more
	  portable. Add stdint.h to the headers in imsg_init(3).

	  No objections from millert@.

2017-03-17 14:51  deraadt

	* lib/libutil/imsg-buffer.c: Grow buffers using recallocarray, to
	  avoid the potential dribble that the standard realloc*()
	  functions can leave behind.  imsg buffers are sometimes used in
	  protocol stacks which require some secrecy, and layering
	  violations would be needed to resolve this issue otherwise.
	  Discussed with many.

2017-03-06 18:44  otto

	* lib/libc/stdlib/recallocarray.c: Introducing recallocarray(3), a
	  blend of calloc(3) and reallocarray(3) with the added feature
	  that released memory is cleared. Much input from various
	  developers. ok deraadt@ tom@

2016-10-15 12:33  jmc

	* lib/libutil/imsg_init.3: zap trailing whitespace;

2016-10-10 17:15  reyk

	* lib/libutil/imsg_init.3: Fixup the example for msgbuf_write() and
	  imsg_read() to check the error cases for -1 and 0 explicitly (it
	  initially only checked for -1, I updated it to also check for 0,
	  and rzalamena@ figured out that 0 has to be checked in a
	  differently).

	  OK millert@ rzalamena@

2015-12-29 18:05  benno

	* lib/libutil/imsg_init.3: mention that ibuf_free() does not need a
	  NULL check.

2015-12-29 18:05  benno

	* lib/libutil/imsg-buffer.c: check for NULL in ibuf_free().  ok and
	  slight improvement, mmcco@ ok semarie@ and encouragement tedu@
	  krw@

2015-12-09 11:54  tb

	* lib/libutil/imsg.c: Add a cast to silence a compiler warning by
	  clang on FreeBSD.  From Craig Rodrigues.  ok tedu@

2015-12-05 13:06  claudio

	* lib/libutil/: imsg.c, imsg_init.3: Do not loop on EAGAIN in
	  imsg_read(). Better to return the error to the caller and let him
	  do another poll loop. This fixes spinning relayd processes seen
	  on busy TLS relays. OK benno@ henning@

2015-11-27 01:57  mmcc

	* lib/libutil/imsg.c: Remove three NULL-checks before free().	ok
	  millert@

2015-07-19 07:18  nicm

	* lib/libutil/imsg.c: Handle malloc(0) returning NULL (which can
	  happen on some other platforms) by explicitly making imsg->data =
	  NULL when there is no data. ok deraadt

2015-07-12 18:40  nicm

	* lib/libutil/: imsg-buffer.c, imsg.c: Use memset instead of bzero
	  for better portability.

	  ok gilles claudio doug

2015-07-11 16:23  deraadt

	* lib/libutil/imsg_init.3: typo in embedded code block; from Ben
	  Cornett

2015-07-03 14:50  brynet

	* lib/libutil/: imsg-buffer.c, imsg.c: bzero cmsgbuf before using
	  it, silences valgrind warnings.

	  henning@ "sure"

2015-06-11 19:25  reyk

	* lib/libutil/: imsg.c, imsg_init.3: The correct semantic is to
	  check msgbuf_write() for <= 0, not just < 0.	Fix one occurence
	  in imsg_flush() and clarify it the man page.

	  Discussed with at least blambert@ jsg@ yasuoka@.

	  OK gilles@

2014-12-25 22:20  benno

	* lib/libutil/imsg-buffer.c: return ERANGE instead of ENOMEM, so
	  callers can differentiate real oom from this case where we have a
	  static buffer and cant realloc.

	  ok phessler, claudio, reyk

2014-06-30 00:26  deraadt

	* lib/libutil/imsg.c: sys/types.h rather than sys/param.h, where
	  applicable.  avoid overreach.

2014-06-30 00:25  deraadt

	* lib/libutil/imsg-buffer.c: limits.h rather than sys/param.h

2013-12-26 17:32  eric

	* lib/libutil/: imsg.c, imsg.h, imsg_init.3: constify data
	  parameter in imsg_add() and imsg_compose()

	  ok deraadt@

2013-11-13 21:04  benno

	* lib/libutil/imsg_init.3: document that ibuf_write() and
	  msgbuf_write() can now return EAGAIN from and with deraadt@

2013-11-13 20:40  benno

	* lib/libutil/imsg-buffer.c: original bug diagnosed by sthen:
	  automatic retry in msgbuf_write on EAGAIN causes spinning.

	  fix from claudio: "Let msgbuf_write return -1 with errno EAGAIN.
	  The users then must check if this was the case and readd the
	  event or poll again.	The current handling in the imsg code is
	  wrong for sure."

	  ok gilles

2013-06-05 03:40  tedu

	* lib/libutil/imsg_init.3: use fancy .In macro for includes. from
	  Jan Klemkow. ok jmc schwarze

2013-02-01 15:22  gilles

	* lib/libutil/imsg.c: fix memleak in imsg_read() when hitting the
	  fd reserve check

	  ok millert@, mikeb@, lteo@

2012-12-19 13:37  reyk

	* lib/libutil/imsg.c: Fix a purely theoretical NULL-pointer
	  dereference in the case that we would be able to receive multiple
	  SCM_RIGHTS messages.

	  ok claudio@ gilles@

2012-11-15 15:31  krw

	* lib/libutil/imsg_init.3: imsg_get() returns ssize_t, not size_t.

2012-10-22 07:15  jmc

	* lib/libutil/imsg_init.3: struct buf -> ibuf; from Sunil
	  Nimmagadda

2012-06-15 23:44  jmatthew

	* lib/libutil/imsg_init.3: update return values for ibuf_write and
	  msgbuf_write

	  ok gilles@

2012-06-02 21:46  gilles

	* lib/libutil/: imsg-buffer.c, imsg.c: in imsg_read() avoid calling
	  recvmsg() if we detect that we will be short on descriptors, this
	  can be achieved thanks to the new getdtablecount() system call.
	  application may provide a reserve count to ensure that the
	  recvmsg() call is not called when they don't have enough
	  descriptors to work properly.

	  change the API so that transient errors that can be retried
	  immediately are retried within the function right away, whereas
	  transient errors for which the application may want to take
	  action will set errno to EAGAIN.

	  ok deraadt@ and henning@

2011-06-23 22:07  sthen

	* lib/libutil/imsg_init.3: s/ands/and/, from Tobias Ulmer

2011-03-05 15:05  claudio

	* lib/libutil/imsg_init.3: Correct msgbuf_write() example. OK jmc@
	  and nicm@

2010-10-31 17:33  nicm

	* lib/libutil/imsg_init.3: imsg.h requires sys/uio.h, ok deraadt

2010-06-23 07:53  nicm

	* lib/libutil/imsg.h: Protect against multiple inclusion, from
	  Christiano F. Haesbaert.

	  ok deraadt@

2010-05-28 01:04  sthen

	* lib/libutil/imsg_init.3: typo; Ian McWilliam

2010-05-26 16:44  nicm

	* lib/libutil/: imsg-buffer.c, imsg.c, imsg.h, imsg_init.3: Move
	  imsg into libutil and add a man page.

	  Minor bump for libutil.

	  Previous versions of this diff and man page looked at by various
	  people.

	  "you should just commit" deraadt

